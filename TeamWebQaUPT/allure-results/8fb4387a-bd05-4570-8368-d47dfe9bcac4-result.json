{"name": "test_navegacion_menu_superior[chrome]", "status": "failed", "statusDetails": {"message": "Failed: No se pudo hacer clic en el enlace: Inicio", "trace": "driver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"e0e02e378238d415bec407da6c053be9\")>\n\n    @allure.feature('Navegación en la barra superior')\n    @allure.story('Navegación del menú superior en la página de eventos')\n    @pytest.mark.chrome\n    @pytest.mark.firefox\n    @pytest.mark.edge\n    def test_navegacion_menu_superior(driver):\n        menus = {\n            \"Inicio\": \"http://161.132.50.153/\",\n            \"Acerca de\": \"http://161.132.50.153/about\",\n            \"Equipos\": \"http://161.132.50.153/equipos\",\n            \"Participantes\": \"http://161.132.50.153/participantes\",\n            \"Lugares\": \"http://161.132.50.153/lugares\"\n        }\n    \n        with allure.step(\"Abrir la página de eventos\"):\n            driver.get(\"http://161.132.50.153/eventos\")\n            sleep(5)\n    \n        for menu, url in menus.items():\n            with allure.step(f\"Hacer clic en el enlace '{menu}'\"):\n                try:\n                    # Volver a la página de eventos para \"Acerca de\", \"Equipos\", \"Participantes\" y \"Lugares\"\n                    if menu in [\"Acerca de\", \"Equipos\", \"Participantes\", \"Lugares\"]:\n                        with allure.step(f\"Volver a la página de eventos antes de hacer clic en '{menu}'\"):\n                            driver.get(\"http://161.132.50.153/eventos\")\n                            sleep(2)\n    \n                    # Usar LINK_TEXT para encontrar el enlace y hacer clic\n>                   menu_link = WebDriverWait(driver, 15).until(\n                        EC.element_to_be_clickable((By.LINK_TEXT, menu))\n                    )\n\nTeamWebQaUPT\\Features\\steps\\test_eventos_steps.py:125: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e0e02e378238d415bec407da6c053be9\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x0000021114B0E5C0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       #0 0x55a25dbac13a <unknown>\nE       #1 0x55a25d8925e0 <unknown>\nE       #2 0x55a25d8e1be8 <unknown>\nE       #3 0x55a25d8e1e81 <unknown>\nE       #4 0x55a25d9288c4 <unknown>\nE       #5 0x55a25d906b4d <unknown>\nE       #6 0x55a25d925d7d <unknown>\nE       #7 0x55a25d9068c3 <unknown>\nE       #8 0x55a25d8d46b3 <unknown>\nE       #9 0x55a25d8d568e <unknown>\nE       #10 0x55a25db76b3b <unknown>\nE       #11 0x55a25db7aac1 <unknown>\nE       #12 0x55a25db63335 <unknown>\nE       #13 0x55a25db7b642 <unknown>\nE       #14 0x55a25db4849f <unknown>\nE       #15 0x55a25db9b038 <unknown>\nE       #16 0x55a25db9b203 <unknown>\nE       #17 0x55a25dbaaf8c <unknown>\nE       #18 0x7f620ee38a94 <unknown>\nE       #19 0x7f620eec5c3c <unknown>\n\nC:\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\ndriver = <selenium.webdriver.remote.webdriver.WebDriver (session=\"e0e02e378238d415bec407da6c053be9\")>\n\n    @allure.feature('Navegación en la barra superior')\n    @allure.story('Navegación del menú superior en la página de eventos')\n    @pytest.mark.chrome\n    @pytest.mark.firefox\n    @pytest.mark.edge\n    def test_navegacion_menu_superior(driver):\n        menus = {\n            \"Inicio\": \"http://161.132.50.153/\",\n            \"Acerca de\": \"http://161.132.50.153/about\",\n            \"Equipos\": \"http://161.132.50.153/equipos\",\n            \"Participantes\": \"http://161.132.50.153/participantes\",\n            \"Lugares\": \"http://161.132.50.153/lugares\"\n        }\n    \n        with allure.step(\"Abrir la página de eventos\"):\n            driver.get(\"http://161.132.50.153/eventos\")\n            sleep(5)\n    \n        for menu, url in menus.items():\n            with allure.step(f\"Hacer clic en el enlace '{menu}'\"):\n                try:\n                    # Volver a la página de eventos para \"Acerca de\", \"Equipos\", \"Participantes\" y \"Lugares\"\n                    if menu in [\"Acerca de\", \"Equipos\", \"Participantes\", \"Lugares\"]:\n                        with allure.step(f\"Volver a la página de eventos antes de hacer clic en '{menu}'\"):\n                            driver.get(\"http://161.132.50.153/eventos\")\n                            sleep(2)\n    \n                    # Usar LINK_TEXT para encontrar el enlace y hacer clic\n                    menu_link = WebDriverWait(driver, 15).until(\n                        EC.element_to_be_clickable((By.LINK_TEXT, menu))\n                    )\n                    menu_link.click()\n                    sleep(1)\n                    assert driver.current_url == url, f\"No se redirigió correctamente al enlace {menu}\"\n    \n                    # Volver a la página de eventos después de cada clic\n                    driver.get(\"http://161.132.50.153/eventos\")\n                    sleep(2)\n    \n                except (NoSuchElementException, TimeoutException) as e:\n                    allure.attach(driver.get_screenshot_as_png(), name=\"Error de Navegación\", attachment_type=allure.attachment_type.PNG)\n                    allure.attach(f\"Enlace no encontrado: {menu}\", name=\"Error de Navegación\", attachment_type=allure.attachment_type.TEXT)\n>                   pytest.fail(f\"No se pudo hacer clic en el enlace: {menu}\")\nE                   Failed: No se pudo hacer clic en el enlace: Inicio\n\nTeamWebQaUPT\\Features\\steps\\test_eventos_steps.py:139: Failed"}, "steps": [{"name": "Abrir la página de eventos", "status": "passed", "start": 1732952342691, "stop": 1732952348887}, {"name": "Hacer clic en el enlace 'Inicio'", "status": "failed", "statusDetails": {"message": "Failed: No se pudo hacer clic en el enlace: Inicio\n", "trace": "  File \"C:\\Users\\Jean_\\proyecto-si8811a-2024-ii-u2-qa-pruebas-valverde-cano\\TeamWebQaUPT\\TeamWebQaUPT\\Features\\steps\\test_eventos_steps.py\", line 139, in test_navegacion_menu_superior\n    pytest.fail(f\"No se pudo hacer clic en el enlace: {menu}\")\n  File \"C:\\Python312\\Lib\\site-packages\\_pytest\\outcomes.py\", line 178, in fail\n    raise Failed(msg=reason, pytrace=pytrace)\n"}, "attachments": [{"name": "Error de Navegación", "source": "ab90dd5a-8a38-464c-ac4f-365907f757f2-attachment.png", "type": "image/png"}, {"name": "Error de Navegación", "source": "872e1827-eee7-4a1e-a309-491303b8efa6-attachment.txt", "type": "text/plain"}], "start": 1732952348887, "stop": 1732952364952}], "parameters": [{"name": "driver", "value": "'chrome'"}], "start": 1732952342691, "stop": 1732952365090, "uuid": "1500ce2c-164c-4aa7-b69e-47623e531814", "historyId": "dbedd21094db02817f854949bffb21dc", "testCaseId": "9497ff7b5ff3c7f092a8a7d1f1782045", "fullName": "TeamWebQaUPT.Features.steps.test_eventos_steps#test_navegacion_menu_superior", "labels": [{"name": "story", "value": "Navegación del menú superior en la página de eventos"}, {"name": "feature", "value": "Navegación en la barra superior"}, {"name": "tag", "value": "edge"}, {"name": "tag", "value": "firefox"}, {"name": "tag", "value": "chrome"}, {"name": "parentSuite", "value": "TeamWebQaUPT.Features.steps"}, {"name": "suite", "value": "test_eventos_steps"}, {"name": "host", "value": "VALVERDE"}, {"name": "thread", "value": "15500-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "TeamWebQaUPT.Features.steps.test_eventos_steps"}]}