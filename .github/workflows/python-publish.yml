name: Publish Python Package

on:
  push:
    tags:
      - "v*"  # El workflow se ejecutar√° cuando se empuje un tag que comience con "v"

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    # Configurar el repositorio
    - name: Checkout repository
      uses: actions/checkout@v3
      run: echo "::notice title=Repository Checkout ‚úÖ::Successfully checked out the repository."

    # Configurar Python
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"
      run: echo "::notice title=Python Setup üêç::Python 3.9 has been configured successfully."

    # Instalar herramientas necesarias para la publicaci√≥n
    - name: Install packaging tools
      run: |
        python -m pip install --upgrade pip setuptools wheel twine
        echo "::notice title=Dependencies Installed üì¶::Packaging tools installed successfully (pip, setuptools, wheel, twine)."

    # Construir el paquete
    - name: Build package
      run: |
        python setup.py sdist bdist_wheel
        echo "::notice title=Package Build üöÄ::Package built successfully and is ready for upload."

    # Subir el paquete a PyPI
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        twine upload dist/*
        echo "::notice title=Upload Success ‚úÖ::The package has been successfully uploaded to PyPI."

    # Generar una anotaci√≥n con los detalles del lanzamiento
    - name: Create release annotation
      run: |
        echo "::notice title=Release Details üì¢::Package version ${GITHUB_REF_NAME} has been successfully published to PyPI."
